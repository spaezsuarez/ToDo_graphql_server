type ItemTask{
    id:Int!
    isDone:Boolean!
    text:String!
}

type Task{
    _id:ID
    title:String!
    description:String
    isDone:Boolean!
    startDate: String!
    endDate: String
    itemsTasks:[ItemTask]
}

type User{
    _id:ID
    name:String
    password:String
    tasks:[Task]
}

input UserInput{
    name:String
    password:String
    tasks:[TaskInput]
}

input ItemTaskInput{
    id:Int!
    isDone:Boolean!
    text:String!
}

input TaskInput{
    title:String!
    description:String
    isDone:Boolean!
    startDate: String!
    endDate: String
    itemsTasks:[ItemTaskInput]
}

type Query{
    getUser(user:UserInput):User
    getUsers:[User]
}

type Mutation{
    createUser(userInput:UserInput):User
    createTask(idUser:String,taskInput:TaskInput):Task
    createItemTask(idTask:String,itemTaskInput:ItemTaskInput):ItemTask
    updateUser(idUser:String,userData:UserInput):User
}
